{"version":3,"sources":["../../../src/web.ts"],"names":["BrowserWeb","_lastWindow","options","a","this","window","open","url","windowName","Promise","resolve","reject","close","Browser"],"mappings":"kSAIaA,EAAb,kDAGE,+CACE,gBACKC,YAAc,KAFrB,EAHF,+EAQE,WAAWC,GAAX,SAAAC,EAAA,sDACEC,KAAKH,YAAcI,OAAOC,KAAKJ,EAAQK,IAAKL,EAAQM,YAAc,UADpE,gDARF,iHAYE,iCAAAL,EAAA,+EACS,IAAIM,SAAQ,SAACC,EAASC,GACH,MAApB,EAAKV,aACP,EAAKA,YAAYW,QACjB,EAAKX,YAAc,KACnBS,KAEAC,EAAO,kCAPb,2CAZF,2D,MAAgC,GAyB1BE,EAAU,IAAIb","file":"static/js/41.3fb0bb7d.chunk.js","sourcesContent":["import { WebPlugin } from '@capacitor/core';\n\nimport type { BrowserPlugin, OpenOptions } from './definitions';\n\nexport class BrowserWeb extends WebPlugin implements BrowserPlugin {\n  _lastWindow: Window | null;\n\n  constructor() {\n    super();\n    this._lastWindow = null;\n  }\n\n  async open(options: OpenOptions): Promise<void> {\n    this._lastWindow = window.open(options.url, options.windowName || '_blank');\n  }\n\n  async close(): Promise<void> {\n    return new Promise((resolve, reject) => {\n      if (this._lastWindow != null) {\n        this._lastWindow.close();\n        this._lastWindow = null;\n        resolve();\n      } else {\n        reject('No active window to close!');\n      }\n    });\n  }\n}\n\nconst Browser = new BrowserWeb();\n\nexport { Browser };\n"],"sourceRoot":""}